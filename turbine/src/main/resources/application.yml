# Spring properties
#Es importante que esta aplicaion tengo @EurekaClient para poder usar Turbine
#Para abrir el dashboard indibidual por servicio se debe acceder a la url
#http://localhost:4444/hystrix 
#y colocar la url del servicio a monitorear http://localhost:8088/hystrix.stream 
#Este debe contar con las @HystrixCommand, las dependencias de hystrix y tener habilitado healthcheck : true
#Para acceder al dashboard de turbine se requiere colocar la url
#http://localhost:4444/turbine.stream
#Se podran monitorear los servicios configurados en appConfig
#si es que cuentan con las @HystrixCommand, las dependencias de hystrix y tener habilitado healthcheck : true
spring:
  application:
     name: turbine
 
server:
  port: 4444   # HTTP (Tomcat) port
  
  
turbine:
  aggregator:
    #clusterConfig: MONOX-USER,MONOX-GEN  #Este parametro agrupa los servicios por dashboard el 
    #nombre del dasboard debe estar en mayusculas y debe matchear con el final del nombre de servicios
    #por ejemplo APP es el nombre del cluster para agrupar registro-app y administracion-app
    #si solo se quiere ver en un dashboard los servicios de la apllicacion registro-app
    #el nombre del cluster debe ser REGISTRO-APP
  appConfig: monox-usr,monox-gen #Esta propiedad indica que servicios de eureka seran monitoreados
  combineHostPort: true ##Esta propiedad sirve para monitorear la misma aplicacion pero montada en mas de un puerto (mas de una aplicacion por host)
  clusterNameExpression: "'default'" ##Esta aplicacion sirve para ver en un solo dashboard todas los servicios puestos en  appConfig

   
---
spring:
  profiles: sa
eureka:
  client:  
    registerWithEureka: false
    serviceUrl:
      defaultZone: http://eureka.peer.one:8050/eureka
---
spring:
  profiles: cl
eureka:
  client:  
    registerWithEureka: false
    serviceUrl:
      defaultZone: http://eureka.peer.one:8050/eureka,http://http://eureka.peer.two:8060/eureka